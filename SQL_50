SQL 50 questions 

'SELECT'

1757. Recyclable and low fat products

    select product_id
    from products
    where low_fats = 'Y' and recyclable = 'Y';


584. Find customer referee

    select name
    from customer
    where referee_id != 2 or referee_id is null;


595. Big Countries

    select name, population, area
    from World
    where area >= 3000000 or population >= 25000000;

1148. Article Views I

    select distinct author_id as id
    from views
    where author_id = viewer_id
    order by author_id;


1683. Invalid Tweets

    select tweet_id
    from tweets
    where length(content) > 15;



'BASIC JOINS'

1378. Replace Employee ID With The Unique Identifier

    select unique_id, e.name
    from employees e
    left join employeeuni u
    using (id);

1068. Product Sales Analysis I

    select product_name, year, price
    from sales s
    join product p using (product_id);

1581. Customer Who Visited but Did Not Make Any Transactions

    select customer_id, count(*) as count_no_trans
    from visits v
    left join transactions t
    using (visit_id)
    where transaction_id is null
    group by customer_id;

197. Rising Temperature

    select w1.Id
    from weather w1
    join weather w2
    where datediff(w1.recordDate,w2.recordDate) = 1 and w1.temperature > w2.temperature;

1661. Average Time of Process per Machine

    select a.machine_id, round(avg(b.timestamp - a.timestamp),3) as processing_time
    from activity a
    join activity b
    where a.machine_id = b.machine_id and a.process_id = b.process_id 
    and a.activity_type = 'start' and b.activity_type = 'end' 
    group by a.machine_id;

577. Employee Bonus

    select name, bonus
    from employee e
    left join bonus b using(empid)
    where bonus < 1000 or bonus is null;

1280. Students and Examinations

    select s.student_id, s.student_name, sb.subject_name, count(e.student_id) as attended_exams
    from students s
    join subjects sb
    left join examinations e
    on s.student_id = e.student_id
    and e.subject_name = sb.subject_name
    group by s.student_id, s.student_name, sb.subject_name
    order by s.student_id, sb.subject_name;

570. Managers with at Least 5 Direct Reports

    select e.name
    from employee e
    join employee m
    on e.id = m.managerId
    group by e.id
    having count(m.managerId) >= 5;

1934. Confirmation Rate

    select s.user_id, ifnull(round(sum(action = 'confirmed')/ count(*),2),0) as confirmation_rate
    from signups s
    left join confirmations c using (user_id)
    group by user_id;



'BASIC AGGREGATE FUNCTIONS'

620. Not Boring Movies

    select *
    from cinema
    where id % 2 = 1 and description != 'boring'
    order by rating desc;

1251. Average Selling Price

    with cte as (
    select product_id, round(sum(price * units) / sum(units),2) as average_price
    from prices p
    left join unitssold u using (product_id)
    where purchase_date between start_date and end_date
    group by product_id
    )
    select * 
    from cte
    
    union
    
    select product_id, 0 as average_price
    from prices
    where product_id not in (select product_id 
                             from unitssold);

1075. Project Employees I

    select project_id, round(avg(experience_years),2) as average_years
    from project p
    join employee e using(employee_id)
    group by project_id;

1633. Percentage of Users Attended a Contest

    select contest_id, round(count(user_id)/ (select count(*) from users)*100,2) as percentage
    from users u
    join register r using(user_id)
    group by contest_id
    order by percentage desc, contest_id;

1211. Queries Quality and Percentage

    select query_name, 
    round(avg(rating/position),2) as quality, 
    round(sum(rating < 3)  /count(query_name) *100,2) as poor_query_percentage
    from queries
    where query_name is not null
    group by query_name;

1193. Monthly Transactions I

    select date_format(trans_date, '%Y-%m') as month, 
    country, 
    count(id) as trans_count, 
    sum(if(state = 'approved', 1,0)) as approved_count,
    sum(amount) as trans_total_amount,
    sum(if(state = 'approved', amount, 0)) as approved_total_amount
    from transactions
    group by month, country;

1174. Immediate Food Delivery II

    select  round(sum((case when order_date = customer_pref_delivery_date then 1 else 0 end)) / count(*),4) * 100 as immediate_percentage
    from delivery
    where (customer_id, order_date) in
    (select customer_id, min(order_date)
    from delivery
    group by customer_id);

550. Game Play Analysis IV

    select 
    round(sum(case when datediff(event_date, min_date) = 1 then 1 else 0 end)
    /
    count(distinct player_id),2) as fraction
    from
    (select player_id, event_date, min(event_date) over (partition by player_id) as min_date
    from activity
     ) temp
    ;

    'SORTING AND GROUPING'

2356. Number of Unique Subjects Taught by Each Teacher

    select teacher_id, count(distinct(subject_id)) as cnt
    from teacher
    group by teacher_id;

1141. User Activity for the Past 30 Days I

    select activity_date as day, count(distinct user_id) as active_users
    from activity
    -- where activity_date between '2019-06-28' and  '2019-07-28' 
    -- where datediff('2019-07-27', activity_date) < 30 and activity_date <= '2019-07-27'
    group by activity_date;
    -- any one WHERE condition

1070. Product Sales Analysis III

    select
    product_id, 
    year as first_year,
    quantity,
    price
    from
    (select *,
    rank() over (partition by product_id order by year) as rk
    from sales
    ) temp
    where rk = 1;

596. Classes More Than 5 Students

    select class
    from courses
    group by class
    having count(*) > 4;

1729. Find Followers Count

    select user_id, count(follower_id) as followers_count
    from followers
    group by user_id
    order by user_id;

619. Biggest Single Number

    select max(num) as num
    from
    (
    select num
    from mynumbers
    group by num
    having count(*) < 2
    ) t;

1045. Customers Who Bought All Products

    select customer_id
    from customer
    group by customer_id
    having count(distinct product_key) = (select count(*) from product);


    'ADVANCED SELECT AND JOINS'

1731. The Number of Employees Which Report to Each Employee

    select e.employee_id, e.name, count(m.reports_to) as reports_count, round(avg(m.age)) as average_age
    from employees e
    join employees m on e.employee_id = m.reports_to
    group by e.employee_id
    order by e.employee_id;

1789. Primary Department for Each Employee

    select employee_id, department_id
    from employee
    where primary_flag = 'Y' or employee_id in 
    (
        select employee_id
        from employee
        group by employee_id
        having count(department_id) = 1
    );

610. Triangle Judgement

    select x,y,z,
    case when (x + y > z) and (x + z > y) and (y + z > x) then 'Yes' else 'No' end as triangle
    from triangle;

180. Consecutive Numbers

    select distinct num as ConsecutiveNums
    from
    (
    select id, lag(num) over(order by id) as prev,num, lead(num) over(order by id) as next
    from logs
    ) temp
    where num = prev and num = next;

1164. Product Price at a Given Date

    with cte as
    (
    select *, rank() over (partition by product_id order by change_date desc) as rk
    from products
    where change_date <= '2019-08-16'
    )
    select product_id, new_price as price
    from cte
    where rk = 1
    
    union 
    
    select product_id, 10 as price
    from products
    where product_id not in (select product_id from cte);

1204. Last Person to Fit in the Bus

    select person_name
    from
    (
    select *, sum(weight) over (order by turn) as sum_weight
    from queue
    ) t
    where sum_weight <= 1000
    order by sum_weight desc
    limit 1;

1907. Count Salary Categories

    select
    'Low Salary' as category, sum(if(income < 20000, 1, 0)) as accounts_count from accounts
    union
    select 
    'Average Salary' as category, sum(if(income >= 20000 and income <= 50000, 1, 0)) as accounts_count from accounts
    union
    select
    'High Salary' as category, sum(if(income > 50000, 1, 0)) as accounts_count from accounts;




